name: .NET CI
env:
  PROJECT_NAME: SecretLabDependenciesBuilder

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: .NET ${{ matrix.framework }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        framework: ['9.0']
        include:
          - os: ubuntu-latest
            target: linux-x64
          - os: windows-latest
            target: win-x64
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - if: matrix.os == 'ubuntu-latest'
        name: Install Linux packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libkrb5-dev make gcc libc-dev cmake llvm

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.framework }}
          cache: false

      - name: Install dependencies
        run: dotnet restore -r ${{ matrix.target }}
      - name: Build
        run: dotnet publish "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" \
               -r ${{ matrix.target }} -c Release \
               -o "${{ github.workspace }}/builds/${{ matrix.framework }}/${{ matrix.target }}"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.target }}-${{ matrix.framework }}
          path: builds/${{ matrix.framework }}/${{ matrix.target }}/*${{ env.PROJECT_NAME }}*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download Builds
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.PROJECT_NAME }}-*-*
          path: builds
          merge-multiple: true
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'builds/*/*'
          bodyFile: .github/release-body.md
          commit: ${{ github.sha }}
          draft: false
          prerelease: false
